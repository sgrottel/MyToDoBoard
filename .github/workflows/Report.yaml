name: Report Tool Build Action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Install dependencies
      run: dotnet restore --arch x64 ./MyToDoBoard.sln

    - name: Inject build number
      shell: pwsh
      run: |
        $versionProj = New-Object System.XML.XMLDocument
        $versionProjPath = Resolve-Path "./Version.proj"
        $versionProj.Load($versionProjPath)
        $version = New-Object System.Version $versionProj.Project.PropertyGroup.Version
        $version = New-Object System.Version @( $version.Major, $version.Minor, ([System.Math]::Max(0, $version.Build)), $env:GITHUB_RUN_NUMBER )
        Write-Host "Version number: $version"
        $versionProj.Project.PropertyGroup.Version = $version.ToString()
        $versionProj.Save($versionProjPath)
        Write-Output "FULL_VERSION_NUMBER=$version" >> $env:GITHUB_ENV
        $readme = [string[]](Get-Content .\Report\README.md)
        $readme = $readme | ForEach-Object { $_ -replace "Version ...", "Version $version" }
        Set-Content -Path .\Report\README.md -Value $readme

    - name: Build Report Tool
      run: dotnet build --configuration ${{ matrix.configuration }} --arch x64 --no-restore ./Report/Report.csproj

    - name: Publish Report Tool
      if: ${{ matrix.configuration == 'Release' }}
      run: dotnet publish --configuration Release -p:PublishProfile=FolderProfile -p:DebugType=None -p:DebugSymbols=false --no-build --no-restore ./Report/Report.csproj

    - name: Build Importer Tool
      # Building the importer is only a smoke test, e.g. when dependencies are updated
      run: dotnet build --configuration ${{ matrix.configuration }} --arch x64 --no-restore ./Importer/Importer.csproj

    - name: Copy Extra Files
      if: ${{ matrix.configuration == 'Release' }}
      shell: pwsh
      run: |
        copy .\LICENSE .\bin\
        copy .\Report\README.md .\bin\

    - name: Upload Artifacts
      if: ${{ matrix.configuration == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: MyToDoBoard-Report-${{env.FULL_VERSION_NUMBER}}
        path: |
          bin
          !**/*.pdb
        if-no-files-found: error
